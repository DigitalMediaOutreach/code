using UnityEngine;
using System.Collections;

public class GridGenerator : MonoBehaviour{

	public int rows;
	public int columns;
	public static TileObject[,] tileGrid;
	public TileObject tileObject;
	public static int[,] status;

	
	public void generateGrid(){
		//creates a grid
		tileGrid= new TileObject[rows,columns];
		status= new int[rows, columns];
		// adds a tile to each grid point[i,j]
		for (int j = 0; j < columns; j++){
			for (int i= 0; i < rows; i++){
			
				// Create a tile 
				TileObject tile= Instantiate(tileObject);
				tile.name="Tile["+i+","+j+"]"; // makes tiles easy to find in editor
	   			tile.transform.parent=gameObject.transform; // makes them components of the grid
				tile.transform.localPosition= new Vector3(i,j,0); // allows us to adjust the position of entire grid
				tile.loc=tile.transform.position;
				tile.transform.localScale= Vector3.one; // tiles are scaled based on the grid's size 

			// setting up tile types
				if (i==0 && j==0){ 
					tile.type=(int)TileObject.TileType.PlayerSpawn;
					status[i,j]=0;
				} 
			// if 0,0 this is the spawn point
				else {
					tile.type= Random.Range(1,5); // for now levels are randomly generated by giving it a random number
					tile.isTreasure= (tile.type==(int)TileObject.TileType.HiddenTreasure);
					status[i,j]=tile.type;
				
				}
			
			// ensures each tile has the right material 
				tile.Material();
			
			// setting up neighbours for easy access for scanning
				tile.North=(i>0)?tileGrid[i-1,j]:null; 
				tile.South=(i<rows-1)? tileGrid[i+1,j]:null;
				tile.East=(j<columns-1)? tileGrid[i,j+1]:null;
				tile.West=(j>0)?tileGrid[i,j-1]:null;
				tile.Neighbourhood();// put the tiles into the neighbourhood 
			
			// put the tile in the grid
				tileGrid[i, j] = tile;
			}
		}
	}
	
	void Start(){
		generateGrid ();
	}	
}
